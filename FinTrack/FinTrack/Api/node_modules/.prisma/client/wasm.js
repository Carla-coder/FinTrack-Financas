
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.18.0
 * Query Engine version: 4c784e32044a8a016d99474bd02a3b6123742169
 */
Prisma.prismaVersion = {
  client: "5.18.0",
  engine: "4c784e32044a8a016d99474bd02a3b6123742169"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  senha: 'senha'
};

exports.Prisma.TransacaoScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  data: 'data',
  descricao: 'descricao',
  categoria: 'categoria',
  valor: 'valor',
  tags: 'tags'
};

exports.Prisma.CategoriaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipo: 'tipo'
};

exports.Prisma.SubcategoriaScalarFieldEnum = {
  id: 'id',
  categoriaId: 'categoriaId',
  nome: 'nome'
};

exports.Prisma.OrcamentoScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  categoriaId: 'categoriaId',
  valor: 'valor',
  dataInicio: 'dataInicio',
  dataFim: 'dataFim'
};

exports.Prisma.HistoricoOrcamentoScalarFieldEnum = {
  id: 'id',
  orcamentoId: 'orcamentoId',
  data: 'data',
  valor: 'valor',
  status: 'status',
  tipoAjuste: 'tipoAjuste'
};

exports.Prisma.RelatorioScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  tipo: 'tipo',
  dataInicio: 'dataInicio',
  dataFim: 'dataFim',
  relatorio: 'relatorio',
  formato: 'formato'
};

exports.Prisma.RelatorioJsonScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  tipo: 'tipo',
  dataInicio: 'dataInicio',
  dataFim: 'dataFim',
  dados: 'dados'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.CategoriaEnum = exports.$Enums.CategoriaEnum = {
  RENDA: 'RENDA',
  ALIMENTACAO: 'ALIMENTACAO',
  TRANSPORTE: 'TRANSPORTE',
  UTILIDADES: 'UTILIDADES',
  ENTRETENIMENTO: 'ENTRETENIMENTO'
};

exports.TipoCategoriaEnum = exports.$Enums.TipoCategoriaEnum = {
  RENDA: 'RENDA',
  DESPESA: 'DESPESA'
};

exports.StatusEnum = exports.$Enums.StatusEnum = {
  DENTRO_DO_ORCAMENTO: 'DENTRO_DO_ORCAMENTO',
  ACIMA_DO_ORCAMENTO: 'ACIMA_DO_ORCAMENTO'
};

exports.TipoAjusteEnum = exports.$Enums.TipoAjusteEnum = {
  PLANEJADO: 'PLANEJADO',
  REAL: 'REAL'
};

exports.TipoRelatorioEnum = exports.$Enums.TipoRelatorioEnum = {
  MENSAL: 'MENSAL',
  ANUAL: 'ANUAL',
  PERSONALIZADO: 'PERSONALIZADO'
};

exports.TipoRelatorioJsonEnum = exports.$Enums.TipoRelatorioJsonEnum = {
  INCOME_EXPENSE: 'INCOME_EXPENSE',
  CATEGORY_BREAKDOWN: 'CATEGORY_BREAKDOWN',
  BUDGET_COMPARISON: 'BUDGET_COMPARISON',
  SAVINGS: 'SAVINGS'
};

exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  Transacao: 'Transacao',
  Categoria: 'Categoria',
  Subcategoria: 'Subcategoria',
  Orcamento: 'Orcamento',
  HistoricoOrcamento: 'HistoricoOrcamento',
  Relatorio: 'Relatorio',
  RelatorioJson: 'RelatorioJson'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
